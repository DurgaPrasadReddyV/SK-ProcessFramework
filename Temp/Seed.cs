using IAMBuddy.Domain.BusinessApp;
using IAMBuddy.Domain.BusinessApp.ActiveDirectory;
using IAMBuddy.Domain.BusinessApp.ActiveDirectory.Accounts;
using IAMBuddy.Domain.BusinessApp.ActiveDirectory.DirectoryGroups;
using IAMBuddy.Domain.BusinessApp.ActiveDirectory.Memberships;
using IAMBuddy.Domain.Common;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Temp
{
    public static class Seed // in-memory seed data (simulates HR/CMDB/Ownership)
    {
        // Users and their managers
        public static readonly Dictionary<string, string> ManagerOfUser = new()
        {
            ["alice"] = "carol",  // alice’s manager is carol
            ["svc-web"] = "opslead",
            ["bob"] = "carol",
            ["JSSMITH_AD"] = "cto"
        };

        // Resource owners for account types or systems
        public static readonly Dictionary<string, string> ResourceOwnerOfApp = new()
        {
            ["AOS"] = "resowner-users",
            ["CXZ"] = "resowner-services",
            ["ERP"] = "jsmith",
            ["CRM"] = "mjohnson",
            ["Human Resources Information System"] = "bwilson",
            ["Internal Development Platform"] = "sdavis",
            ["Identity Access Management"] = "rchen",
            ["Business Intelligence Platform"] = "agarcia",
            ["Legacy Mainframe System"] = "mlee",
            ["Mobile Application Backend"] = "kbrown",
            ["Document Management System"] = "dwilliams",
            ["DevOps Pipeline System"] = "lmiller"
        };

        // Platform owner (e.g., AD Platform Owner)
        public const string PlatformOwner = "ad-platform-owner";

        // Simple directory config (fill these for real env)
        public static class DirectoryConfig
        {
            public const string Domain = "cyborg.local";
            public const string UsersOu = "OU=Users,DC=cyborg,DC=local";
            public const string ServicesOu = "OU=Services,DC=cyborg,DC=local";
            public const string GroupsOu = "OU=Groups,DC=cyborg,DC=local";
            public const string AdminUser = "cyborg\\ad-provisioner";
            public const string AdminPassword = "P@ssw0rd!"; // store securely in practice
        }

        private static readonly DateTimeOffset BaseDate = new(2024, 1, 1, 0, 0, 0, TimeSpan.Zero);
        private static readonly Random Random = new(42); // Seed for consistent results

        public static List<AuthoritativeSource> CreateAuthoritativeSources()
        {
            return new List<AuthoritativeSource>
        {
            new() {
                Id = 1,
                SourceName = "Active Directory Primary",
                SourceType = "ActiveDirectory",
                Description = "Primary Active Directory forest for corporate domain",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddMinutes(-15),
                CreatedAt = BaseDate,
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Domain"] = "corp.company.com", ["Priority"] = "High" }
            },
            new() {
                Id = 2,
                SourceName = "Workday HRIS",
                SourceType = "HRIS",
                Description = "Human Resources Information System",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddHours(-2),
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["APIVersion"] = "v2", ["SyncFrequency"] = "Hourly" }
            },
            new() {
                Id = 3,
                SourceName = "Azure Active Directory",
                SourceType = "CloudDirectory",
                Description = "Microsoft Azure Active Directory tenant",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddMinutes(-30),
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["TenantId"] = "12345678-1234-1234-1234-123456789012" }
            },
            new() {
                Id = 4,
                SourceName = "ServiceNow ITSM",
                SourceType = "ITSM",
                Description = "IT Service Management platform",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddMinutes(-45),
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "service",
                Attributes = new Dictionary<string, string> { ["Instance"] = "dev12345", ["Environment"] = "Production" }
            },
            new() {
                Id = 5,
                SourceName = "SAP SuccessFactors",
                SourceType = "HRIS",
                Description = "SAP HR management system",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddHours(-1),
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["DataCenter"] = "US-East", ["Company"] = "ACME Corp" }
            },
            new() {
                Id = 6,
                SourceName = "Okta Identity Provider",
                SourceType = "IdentityProvider",
                Description = "Cloud-based identity and access management",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddMinutes(-20),
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["OrgUrl"] = "https://company.okta.com" }
            },
            new() {
                Id = 7,
                SourceName = "Active Directory DMZ",
                SourceType = "ActiveDirectory",
                Description = "DMZ Active Directory for external partners",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddHours(-3),
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Domain"] = "dmz.company.com", ["TrustLevel"] = "External" }
            },
            new() {
                Id = 8,
                SourceName = "Oracle Identity Management",
                SourceType = "IdentityProvider",
                Description = "Oracle Identity and Access Management suite",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddMinutes(-50),
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["Version"] = "12.2.1.4", ["Status"] = "Deprecated" }
            },
            new() {
                Id = 9,
                SourceName = "LDAP Directory",
                SourceType = "LDAP",
                Description = "Lightweight Directory Access Protocol server",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddMinutes(-25),
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Host"] = "ldap.company.com", ["Port"] = "636" }
            },
            new() {
                Id = 10,
                SourceName = "Database Import",
                SourceType = "Database",
                Description = "Legacy database import for historical data",
                LastSynchronizationTimestamp = DateTimeOffset.Now.AddDays(-1),
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "migration",
                Attributes = new Dictionary<string, string> { ["Source"] = "Legacy_HRDB", ["LastImport"] = "2024-12-01" }
            }
        };
        }

        public static List<HumanIdentity> CreateHumanIdentities()
        {
            return new List<HumanIdentity>
        {
            new() {
                Id = 1,
                UserId = "jsmith",
                FirstName = "John",
                LastName = "Smith",
                Email = "john.smith@company.com",
                Phone = "+1-555-0101",
                JobTitle = "Senior Software Engineer",
                Department = "Engineering",
                Division = "Technology",
                CostCenter = "TECH-001",
                Location = "New York, NY",
                HireDate = BaseDate.AddDays(-365),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "EMP001",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate,
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Level"] = "L4", ["Team"] = "Platform" }
            },
            new() {
                Id = 2,
                UserId = "mjohnson",
                FirstName = "Mary",
                LastName = "Johnson",
                Email = "mary.johnson@company.com",
                Phone = "+1-555-0102",
                JobTitle = "Product Manager",
                Department = "Product",
                Division = "Business",
                CostCenter = "PROD-001",
                Location = "San Francisco, CA",
                HireDate = BaseDate.AddDays(-200),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "EMP002",
                Company = "ACME Corporation",
                IsContractor = false,
                ManagerId = 3,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Level"] = "M2", ["ProductArea"] = "Mobile" }
            },
            new() {
                Id = 3,
                UserId = "bwilson",
                FirstName = "Bob",
                LastName = "Wilson",
                Email = "bob.wilson@company.com",
                Phone = "+1-555-0103",
                JobTitle = "Engineering Director",
                Department = "Engineering",
                Division = "Technology",
                CostCenter = "TECH-001",
                Location = "Austin, TX",
                HireDate = BaseDate.AddDays(-800),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "EMP003",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Level"] = "D1", ["Reports"] = "15" }
            },
            new() {
                Id = 4,
                UserId = "sdavis",
                FirstName = "Sarah",
                LastName = "Davis",
                Email = "sarah.davis@company.com",
                Phone = "+1-555-0104",
                JobTitle = "Security Analyst",
                Department = "Security",
                Division = "Technology",
                CostCenter = "SEC-001",
                Location = "Denver, CO",
                HireDate = BaseDate.AddDays(-150),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "EMP004",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Clearance"] = "Secret", ["Certifications"] = "CISSP,CISM" }
            },
            new() {
                Id = 5,
                UserId = "rchen",
                FirstName = "Robert",
                LastName = "Chen",
                Email = "robert.chen@contractor.com",
                Phone = "+1-555-0105",
                JobTitle = "DevOps Consultant",
                Department = "Engineering",
                Division = "Technology",
                CostCenter = "TECH-002",
                Location = "Seattle, WA",
                HireDate = BaseDate.AddDays(-90),
                ContractEndDate = BaseDate.AddDays(270),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "CTR001",
                Company = "TechCorp Consulting",
                IsContractor = true,
                ManagerId = 3,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["ContractType"] = "1099", ["Vendor"] = "TechCorp" }
            },
            new() {
                Id = 6,
                UserId = "agarcia",
                FirstName = "Ana",
                LastName = "Garcia",
                Email = "ana.garcia@company.com",
                Phone = "+1-555-0106",
                JobTitle = "Data Scientist",
                Department = "Analytics",
                Division = "Technology",
                CostCenter = "DATA-001",
                Location = "Chicago, IL",
                HireDate = BaseDate.AddDays(-300),
                Status = HumanIdentity.EHumanIdentityStatus.OnLeave,
                EmployeeId = "EMP005",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["LeaveType"] = "Maternity", ["ReturnDate"] = "2024-06-01" }
            },
            new() {
                Id = 7,
                UserId = "mlee",
                FirstName = "Michael",
                LastName = "Lee",
                Email = "michael.lee@company.com",
                Phone = "+1-555-0107",
                JobTitle = "Business Analyst",
                Department = "Business Operations",
                Division = "Business",
                CostCenter = "BIZ-001",
                Location = "Boston, MA",
                HireDate = BaseDate.AddDays(-500),
                TerminationDate = BaseDate.AddDays(-30),
                Status = HumanIdentity.EHumanIdentityStatus.Terminated,
                EmployeeId = "EMP006",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["TerminationReason"] = "Voluntary", ["ExitProcessed"] = "true" }
            },
            new() {
                Id = 8,
                UserId = "kbrown",
                FirstName = "Karen",
                LastName = "Brown",
                Email = "karen.brown@company.com",
                Phone = "+1-555-0108",
                JobTitle = "HR Manager",
                Department = "Human Resources",
                Division = "Corporate",
                CostCenter = "HR-001",
                Location = "Atlanta, GA",
                HireDate = BaseDate.AddDays(-600),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "EMP007",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 2,
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Level"] = "M1", ["Specialization"] = "Talent Acquisition" }
            },
            new() {
                Id = 9,
                UserId = "dwilliams",
                FirstName = "David",
                LastName = "Williams",
                Email = "david.williams@partner.com",
                Phone = "+1-555-0109",
                JobTitle = "Integration Specialist",
                Department = "Engineering",
                Division = "Technology",
                CostCenter = "TECH-003",
                Location = "Remote",
                HireDate = BaseDate.AddDays(-60),
                ContractEndDate = BaseDate.AddDays(305),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "PTR001",
                Company = "Partner Solutions Inc",
                IsContractor = true,
                ManagerId = 3,
                AuthoritativeSourceId = 3,
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["ContractType"] = "W2", ["PartnerCompany"] = "Partner Solutions" }
            },
            new() {
                Id = 10,
                UserId = "lmiller",
                FirstName = "Lisa",
                LastName = "Miller",
                Email = "lisa.miller@company.com",
                Phone = "+1-555-0110",
                JobTitle = "System Administrator",
                Department = "IT Operations",
                Division = "Technology",
                CostCenter = "IT-001",
                Location = "Phoenix, AZ",
                HireDate = BaseDate.AddDays(-450),
                Status = HumanIdentity.EHumanIdentityStatus.Active,
                EmployeeId = "EMP008",
                Company = "ACME Corporation",
                IsContractor = false,
                AuthoritativeSourceId = 1,
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Shift"] = "24x7", ["OnCall"] = "true" }
            }
        };
        }

        public static List<BusinessApplication> CreateBusinessApplications()
        {
            return new List<BusinessApplication>
        {
            new() {
                Id = 1,
                Name = "ERP",
                Description = "Core ERP system for financial and operational data",
                BusinessPurpose = "Financial management and reporting",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.Critical,
                VendorName = "SAP",
                Version = "S/4HANA 2022",
                GoLiveDate = BaseDate.AddDays(-1000),
                AnnualCost = 2500000.00m,
                ComplianceRequirements = "SOX, GDPR, HIPAA",
                DataClassification = "Confidential",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/erp",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 1,
                PrimaryOwnerId = 1, // Will reference BusinessAppUser
                TechnicalContactId = 2,
                BusinessContactId = 3,
                CreatedAt = BaseDate,
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["Module"] = "FI-CO", ["SupportLevel"] = "24x7" }
            },
            new() {
                Id = 2,
                Name = "CRM",
                Description = "Salesforce CRM for customer data management",
                BusinessPurpose = "Sales and customer relationship management",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.High,
                VendorName = "Salesforce",
                Version = "Spring '24",
                GoLiveDate = BaseDate.AddDays(-800),
                AnnualCost = 500000.00m,
                ComplianceRequirements = "GDPR, CCPA",
                DataClassification = "Internal",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/crm",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 3,
                PrimaryOwnerId = 2,
                TechnicalContactId = 1,
                BusinessContactId = 4,
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["Edition"] = "Enterprise", ["Users"] = "500" }
            },
            new() {
                Id = 3,
                Name = "HRIS",
                Description = "Workday HRIS for employee data and processes",
                BusinessPurpose = "HR processes and employee lifecycle management",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.Critical,
                VendorName = "Workday",
                Version = "2024R1",
                GoLiveDate = BaseDate.AddDays(-600),
                AnnualCost = 800000.00m,
                ComplianceRequirements = "SOX, GDPR, Employment Law",
                DataClassification = "Restricted",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/hris",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 2,
                PrimaryOwnerId = 3,
                TechnicalContactId = 4,
                BusinessContactId = 5,
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["Tenant"] = "acme_corp", ["Region"] = "US" }
            },
            new() {
                Id = 4,
                Name = "IDP",
                Description = "Custom-built development and deployment platform",
                BusinessPurpose = "Software development lifecycle management",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.High,
                VendorName = "Internal",
                Version = "2.1.5",
                GoLiveDate = BaseDate.AddDays(-400),
                AnnualCost = 200000.00m,
                ComplianceRequirements = "SOC 2",
                DataClassification = "Internal",
                IsCustomDeveloped = true,
                SourceCodeRepository = "https://github.com/acme/dev-platform",
                DocumentationLink = "https://dev.company.com/docs",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 1,
                PrimaryOwnerId = 4,
                TechnicalContactId = 5,
                BusinessContactId = 1,
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["Language"] = "Python", ["Framework"] = "Django" }
            },
            new() {
                Id = 5,
                Name = "Identity Access Management",
                Description = "Okta identity and access management platform",
                BusinessPurpose = "Single sign-on and identity management",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.Critical,
                VendorName = "Okta",
                Version = "2024.02",
                GoLiveDate = BaseDate.AddDays(-300),
                AnnualCost = 300000.00m,
                ComplianceRequirements = "SOC 2, ISO 27001",
                DataClassification = "Restricted",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/iam",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 6,
                PrimaryOwnerId = 5,
                TechnicalContactId = 6,
                BusinessContactId = 7,
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "security",
                Attributes = new Dictionary<string, string> { ["OrgId"] = "00o1a2b3c4d5e6f7g8h9", ["DomainVerified"] = "true" }
            },
            new() {
                Id = 6,
                Name = "Business Intelligence Platform",
                Description = "Tableau analytics and reporting platform",
                BusinessPurpose = "Data visualization and business intelligence",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.Medium,
                VendorName = "Tableau",
                Version = "2023.3",
                GoLiveDate = BaseDate.AddDays(-250),
                AnnualCost = 150000.00m,
                ComplianceRequirements = "Data Privacy",
                DataClassification = "Internal",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/bi",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 1,
                PrimaryOwnerId = 6,
                TechnicalContactId = 7,
                BusinessContactId = 8,
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["ServerMode"] = "Production", ["LicenseType"] = "Creator" }
            },
            new() {
                Id = 7,
                Name = "Legacy Mainframe System",
                Description = "IBM mainframe system for legacy operations",
                BusinessPurpose = "Legacy transaction processing",
                Status = BusinessApplication.EBusinessAppStatus.Deprecated,
                Criticality = BusinessApplication.EBusinessAppCriticality.Low,
                VendorName = "IBM",
                Version = "z/OS 2.5",
                GoLiveDate = BaseDate.AddDays(-3000),
                EndOfLifeDate = BaseDate.AddDays(180),
                AnnualCost = 1000000.00m,
                ComplianceRequirements = "Financial Reporting",
                DataClassification = "Confidential",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/mainframe",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = false,
                AuthoritativeSourceId = 10,
                PrimaryOwnerId = 7,
                TechnicalContactId = 8,
                BusinessContactId = 9,
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "legacy",
                Attributes = new Dictionary<string, string> { ["LPAR"] = "PROD1", ["Migration"] = "Planned" }
            },
            new() {
                Id = 8,
                Name = "Mobile Application Backend",
                Description = "API backend for mobile applications",
                BusinessPurpose = "Mobile app data services",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.High,
                VendorName = "Internal",
                Version = "3.2.1",
                GoLiveDate = BaseDate.AddDays(-120),
                AnnualCost = 75000.00m,
                ComplianceRequirements = "API Security Standards",
                DataClassification = "Internal",
                IsCustomDeveloped = true,
                SourceCodeRepository = "https://github.com/acme/mobile-api",
                DocumentationLink = "https://api.company.com/docs",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 4,
                PrimaryOwnerId = 8,
                TechnicalContactId = 9,
                BusinessContactId = 2,
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "mobile-team",
                Attributes = new Dictionary<string, string> { ["Language"] = "Node.js", ["Database"] = "MongoDB" }
            },
            new() {
                Id = 9,
                Name = "Document Management System",
                Description = "SharePoint document management and collaboration",
                BusinessPurpose = "Document storage and collaboration",
                Status = BusinessApplication.EBusinessAppStatus.Active,
                Criticality = BusinessApplication.EBusinessAppCriticality.Medium,
                VendorName = "Microsoft",
                Version = "SharePoint 2019",
                GoLiveDate = BaseDate.AddDays(-700),
                AnnualCost = 100000.00m,
                ComplianceRequirements = "Information Governance",
                DataClassification = "Internal",
                IsCustomDeveloped = false,
                DocumentationLink = "https://wiki.company.com/sharepoint",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = true,
                AuthoritativeSourceId = 1,
                PrimaryOwnerId = 9,
                TechnicalContactId = 10,
                BusinessContactId = 1,
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "admin",
                Attributes = new Dictionary<string, string> { ["FarmVersion"] = "16.0.15330.20230", ["Authentication"] = "Claims" }
            },
            new() {
                Id = 10,
                Name = "DevOps Pipeline System",
                Description = "Jenkins CI/CD pipeline for automated deployments",
                BusinessPurpose = "Continuous integration and deployment",
                Status = BusinessApplication.EBusinessAppStatus.UnderDevelopment,
                Criticality = BusinessApplication.EBusinessAppCriticality.High,
                VendorName = "Jenkins",
                Version = "2.426.1",
                GoLiveDate = BaseDate.AddDays(30),
                AnnualCost = 50000.00m,
                ComplianceRequirements = "Change Management",
                DataClassification = "Internal",
                IsCustomDeveloped = false,
                SourceCodeRepository = "https://github.com/acme/jenkins-config",
                DocumentationLink = "https://jenkins.company.com/docs",
                ResourceType = IResource.EResourceType.BusinessApplication,
                IsActive = false,
                AuthoritativeSourceId = 4,
                PrimaryOwnerId = 10,
                TechnicalContactId = 1,
                BusinessContactId = 4,
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["Plugins"] = "200+", ["Executors"] = "50" }
            }
        };
        }

        public static List<BusinessAppEnvironment> CreateBusinessAppEnvironments()
        {
            var environments = new List<BusinessAppEnvironment>();
            var environmentTypes = new[]
            {
            (BusinessAppEnvironment.EBusinessAppEnvironment.Production, "Production", "prod"),
            (BusinessAppEnvironment.EBusinessAppEnvironment.UAT, "User Acceptance Testing", "uat"),
            (BusinessAppEnvironment.EBusinessAppEnvironment.Test, "Testing", "test"),
            (BusinessAppEnvironment.EBusinessAppEnvironment.Development, "Development", "dev")
        };

            int id = 1;
            for (int appId = 1; appId <= 10; appId++)
            {
                var appEnvironments = environmentTypes.Take(Random.Next(2, 5)).ToList();
                foreach (var (envType, envName, urlSuffix) in appEnvironments)
                {
                    environments.Add(new BusinessAppEnvironment
                    {
                        Id = id++,
                        Environment = envType,
                        EnvironmentName = envName,
                        Description = $"{envName} environment for application {appId}",
                        IsActive = envType != BusinessAppEnvironment.EBusinessAppEnvironment.Development || appId <= 5,
                        Url = $"https://app{appId}-{urlSuffix}.company.com",
                        BusinessApplicationId = appId,
                        CreatedAt = BaseDate.AddDays(appId - 1),
                        CreatedBy = "system",
                        Attributes = new Dictionary<string, string>
                        {
                            ["Region"] = "us-east-1",
                            ["Monitoring"] = envType == BusinessAppEnvironment.EBusinessAppEnvironment.Production ? "enabled" : "basic"
                        }
                    });
                }
            }

            return environments.Take(10).ToList();
        }

        public static List<BusinessAppUser> CreateBusinessAppUsers()
        {
            return new List<BusinessAppUser>
        {
            new() {
                Id = 1,
                Role = "Application Owner",
                StartDate = BaseDate.AddDays(-365),
                HumanIdentityId = 1,
                BusinessApplicationId = 1,
                CreatedAt = BaseDate,
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "Full", ["Responsibilities"] = "System Administration" }
            },
            new() {
                Id = 2,
                Role = "Product Owner",
                StartDate = BaseDate.AddDays(-200),
                HumanIdentityId = 2,
                BusinessApplicationId = 2,
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "Admin", ["Module"] = "Sales Cloud" }
            },
            new() {
                Id = 3,
                Role = "Technical Lead",
                StartDate = BaseDate.AddDays(-800),
                HumanIdentityId = 3,
                BusinessApplicationId = 3,
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "Admin", ["Scope"] = "All Modules" }
            },
            new() {
                Id = 4,
                Role = "Security Administrator",
                StartDate = BaseDate.AddDays(-150),
                HumanIdentityId = 4,
                BusinessApplicationId = 5,
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "SuperAdmin", ["SecurityClearance"] = "Required" }
            },
            new() {
                Id = 5,
                Role = "DevOps Engineer",
                StartDate = BaseDate.AddDays(-90),
                EndDate = BaseDate.AddDays(270),
                HumanIdentityId = 5,
                BusinessApplicationId = 4,
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "Deploy", ["ContractRole"] = "true" }
            },
            new() {
                Id = 6,
                Role = "Data Analyst",
                StartDate = BaseDate.AddDays(-300),
                HumanIdentityId = 6,
                BusinessApplicationId = 6,
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "Viewer", ["DataSets"] = "Sales,Marketing" }
            },
            new() {
                Id = 7,
                Role = "Business Analyst",
                StartDate = BaseDate.AddDays(-500),
                EndDate = BaseDate.AddDays(-30),
                HumanIdentityId = 7,
                BusinessApplicationId = 1,
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "ReadOnly", ["Status"] = "Terminated" }
            },
            new() {
                Id = 8,
                Role = "HR Administrator",
                StartDate = BaseDate.AddDays(-600),
                HumanIdentityId = 8,
                BusinessApplicationId = 3,
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "HRAdmin", ["Department"] = "All" }
            },
            new() {
                Id = 9,
                Role = "Integration Developer",
                StartDate = BaseDate.AddDays(-60),
                EndDate = BaseDate.AddDays(305),
                HumanIdentityId = 9,
                BusinessApplicationId = 8,
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "Developer", ["APIs"] = "Mobile,Core" }
            },
            new() {
                Id = 10,
                Role = "System Administrator",
                StartDate = BaseDate.AddDays(-450),
                HumanIdentityId = 10,
                BusinessApplicationId = 9,
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["AccessLevel"] = "FullControl", ["SiteCollection"] = "All" }
            }
        };
        }

        public static List<BusinessAppResourceIdentity> CreateBusinessAppResourceIdentities()
        {
            return new List<BusinessAppResourceIdentity>
        {
            new() {
                Id = 1,
                Name = "ERP-Service-Account",
                DisplayName = "ERP System Service Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.ServiceAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "Database connections and batch processing",
                TechnicalContact = "john.smith@company.com",
                LastAccessDate = DateTimeOffset.Now.AddMinutes(-5),
                AccessFrequency = "Continuous",
                Description = "Primary service account for ERP system operations",
                BusinessApplicationId = 1,
                BusinessAppEnvironmentId = 1, // Production
                PrimaryOwnerId = 1,
                CreatedAt = BaseDate,
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Database", ["Rotation"] = "90days" }
            },
            new() {
                Id = 2,
                Name = "CRM-Integration-Service",
                DisplayName = "CRM Integration Service Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.ApplicationAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "API integrations with external systems",
                TechnicalContact = "mary.johnson@company.com",
                LastAccessDate = DateTimeOffset.Now.AddMinutes(-30),
                AccessFrequency = "Hourly",
                Description = "Service account for CRM API integrations",
                BusinessApplicationId = 2,
                BusinessAppEnvironmentId = 2,
                PrimaryOwnerId = 2,
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["APIVersion"] = "v2", ["RateLimit"] = "1000/hour" }
            },
            new() {
                Id = 3,
                Name = "HRIS-Batch-Processor",
                DisplayName = "HRIS Batch Processing Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.SystemAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "Nightly batch processing of HR data",
                TechnicalContact = "bob.wilson@company.com",
                LastAccessDate = DateTimeOffset.Now.AddHours(-8),
                AccessFrequency = "Daily",
                Description = "Automated batch processing for HR data",
                BusinessApplicationId = 3,
                BusinessAppEnvironmentId = 3,
                PrimaryOwnerId = 3,
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["Schedule"] = "02:00 UTC", ["DataVolume"] = "Large" }
            },
            new() {
                Id = 4,
                Name = "DevPlatform-Shared-Service",
                DisplayName = "Development Platform Shared Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.SharedAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "Shared development resources access",
                TechnicalContact = "sarah.davis@company.com",
                ExpirationDate = BaseDate.AddDays(365),
                LastAccessDate = DateTimeOffset.Now.AddHours(-2),
                AccessFrequency = "On-demand",
                Description = "Shared account for development team resources",
                BusinessApplicationId = 4,
                BusinessAppEnvironmentId = 4,
                PrimaryOwnerId = 4,
                SecondaryOwnerId = 5,
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["Team"] = "Platform", ["AccessType"] = "Shared" }
            },
            new() {
                Id = 5,
                Name = "IAM-Directory-Service",
                DisplayName = "IAM Directory Service Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.ServiceAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "LDAP directory synchronization",
                TechnicalContact = "robert.chen@contractor.com",
                LastAccessDate = DateTimeOffset.Now.AddMinutes(-10),
                AccessFrequency = "Continuous",
                Description = "Service account for directory synchronization",
                BusinessApplicationId = 5,
                BusinessAppEnvironmentId = 5,
                PrimaryOwnerId = 5,
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "security",
                Attributes = new Dictionary<string, string> { ["Protocol"] = "LDAPS", ["SyncInterval"] = "5min" }
            },
            new() {
                Id = 6,
                Name = "BI-Report-Generator",
                DisplayName = "BI Report Generation Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.SystemAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "Automated report generation",
                TechnicalContact = "ana.garcia@company.com",
                LastAccessDate = DateTimeOffset.Now.AddHours(-6),
                AccessFrequency = "Daily",
                Description = "System account for generating business reports",
                BusinessApplicationId = 6,
                BusinessAppEnvironmentId = 6,
                PrimaryOwnerId = 6,
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "analytics",
                Attributes = new Dictionary<string, string> { ["ReportTypes"] = "Financial,Operational", ["Schedule"] = "06:00 UTC" }
            },
            new() {
                Id = 7,
                Name = "Legacy-System-Bridge",
                DisplayName = "Legacy System Bridge Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.GenericAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Disabled,
                Purpose = "Bridge for legacy system integration",
                TechnicalContact = "michael.lee@company.com",
                ExpirationDate = BaseDate.AddDays(180),
                LastAccessDate = BaseDate.AddDays(-45),
                AccessFrequency = "Deprecated",
                Description = "Legacy integration account - scheduled for removal",
                BusinessApplicationId = 7,
                BusinessAppEnvironmentId = 7,
                PrimaryOwnerId = 7,
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "legacy",
                Attributes = new Dictionary<string, string> { ["Status"] = "Deprecated", ["MigrationPlan"] = "Q2-2024" }
            },
            new() {
                Id = 8,
                Name = "Mobile-API-Service",
                DisplayName = "Mobile API Service Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.ApplicationAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "Mobile application backend services",
                TechnicalContact = "karen.brown@company.com",
                LastAccessDate = DateTimeOffset.Now.AddMinutes(-1),
                AccessFrequency = "Real-time",
                Description = "Service account for mobile application APIs",
                BusinessApplicationId = 8,
                BusinessAppEnvironmentId = 8,
                PrimaryOwnerId = 8,
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "mobile-team",
                Attributes = new Dictionary<string, string> { ["LoadBalancer"] = "enabled", ["CDN"] = "CloudFlare" }
            },
            new() {
                Id = 9,
                Name = "SharePoint-Farm-Service",
                DisplayName = "SharePoint Farm Service Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.ServiceAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Active,
                Purpose = "SharePoint farm services and search",
                TechnicalContact = "david.williams@partner.com",
                LastAccessDate = DateTimeOffset.Now.AddMinutes(-15),
                AccessFrequency = "Continuous",
                Description = "Service account for SharePoint farm operations",
                BusinessApplicationId = 9,
                BusinessAppEnvironmentId = 9,
                PrimaryOwnerId = 9,
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "sharepoint",
                Attributes = new Dictionary<string, string> { ["FarmRole"] = "Application", ["SearchEnabled"] = "true" }
            },
            new() {
                Id = 10,
                Name = "Jenkins-Build-Agent",
                DisplayName = "Jenkins Build Agent Account",
                Type = BusinessAppResourceIdentity.EBusinessAppResourceIdentityType.SystemAccount,
                Status = BusinessAppResourceIdentity.EBusinessAppResourceIdentityStatus.Inactive,
                Purpose = "Automated build and deployment processes",
                TechnicalContact = "lisa.miller@company.com",
                ExpirationDate = BaseDate.AddDays(30),
                LastAccessDate = BaseDate.AddDays(-7),
                AccessFrequency = "On-demand",
                Description = "Service account for Jenkins build agents",
                BusinessApplicationId = 10,
                BusinessAppEnvironmentId = 10,
                PrimaryOwnerId = 10,
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["BuildType"] = "Docker", ["Agents"] = "5" }
            }
        };
        }

        public static List<BusinessAppHumanActiveDirectoryAccount> CreateBusinessAppHumanActiveDirectoryAccounts()
        {
            return new List<BusinessAppHumanActiveDirectoryAccount>
        {
            new() {
                Id = 1,
                Name = "John Smith AD Account",
                SamAccountName = "jsmith",
                UserPrincipalName = "jsmith@corp.company.com",
                DistinguishedName = "CN=John Smith,OU=Users,OU=Engineering,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1001",
                GivenName = "John",
                Surname = "Smith",
                DisplayName = "John Smith",
                Email = "john.smith@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-45),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = true,
                AccountExpires = BaseDate.AddDays(365),
                LastLogon = DateTimeOffset.Now.AddHours(-2),
                EmployeeId = "EMP001",
                Department = "Engineering",
                Title = "Senior Software Engineer",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-365),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessApplicationId = 1,
                HumanIdentityId = 1,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate,
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["BadLogonCount"] = "0", ["LogonHours"] = "24x7" }
            },
            new() {
                Id = 2,
                Name = "Mary Johnson AD Account",
                SamAccountName = "mjohnson",
                UserPrincipalName = "mjohnson@corp.company.com",
                DistinguishedName = "CN=Mary Johnson,OU=Users,OU=Product,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1002",
                GivenName = "Mary",
                Surname = "Johnson",
                DisplayName = "Mary Johnson",
                Email = "mary.johnson@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-30),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = false,
                LastLogon = DateTimeOffset.Now.AddMinutes(-30),
                EmployeeId = "EMP002",
                Department = "Product",
                Title = "Product Manager",
                ManagerSid = "S-1-5-21-123456789-987654321-111111111-1003",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-200),
                WhenChanged = DateTimeOffset.Now.AddDays(-2),
                BusinessApplicationId = 2,
                HumanIdentityId = 2,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["MobileDevice"] = "enrolled", ["VPN"] = "enabled" }
            },
            new() {
                Id = 3,
                Name = "Bob Wilson AD Account",
                SamAccountName = "bwilson",
                UserPrincipalName = "bwilson@corp.company.com",
                DistinguishedName = "CN=Bob Wilson,OU=Users,OU=Management,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1003",
                GivenName = "Bob",
                Surname = "Wilson",
                DisplayName = "Bob Wilson",
                Email = "bob.wilson@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-60),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = true,
                LastLogon = DateTimeOffset.Now.AddHours(-1),
                EmployeeId = "EMP003",
                Department = "Engineering",
                Title = "Engineering Director",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-800),
                WhenChanged = DateTimeOffset.Now.AddDays(-3),
                BusinessApplicationId = 3,
                HumanIdentityId = 3,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["AdminRights"] = "elevated", ["DirectReports"] = "15" }
            },
            new() {
                Id = 4,
                Name = "Sarah Davis AD Account",
                SamAccountName = "sdavis",
                UserPrincipalName = "sdavis@corp.company.com",
                DistinguishedName = "CN=Sarah Davis,OU=Users,OU=Security,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1004",
                GivenName = "Sarah",
                Surname = "Davis",
                DisplayName = "Sarah Davis",
                Email = "sarah.davis@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-20),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = true,
                LastLogon = DateTimeOffset.Now.AddMinutes(-45),
                EmployeeId = "EMP004",
                Department = "Security",
                Title = "Security Analyst",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-150),
                WhenChanged = DateTimeOffset.Now.AddHours(-6),
                BusinessApplicationId = 5,
                HumanIdentityId = 4,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["SecurityGroups"] = "SecurityAdmins", ["MFA"] = "required" }
            },
            new() {
                Id = 5,
                Name = "Robert Chen AD Account",
                SamAccountName = "rchen",
                UserPrincipalName = "rchen@corp.company.com",
                DistinguishedName = "CN=Robert Chen,OU=Users,OU=Contractors,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1005",
                GivenName = "Robert",
                Surname = "Chen",
                DisplayName = "Robert Chen (Contractor)",
                Email = "robert.chen@contractor.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-10),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = false,
                AccountExpires = BaseDate.AddDays(270),
                LastLogon = DateTimeOffset.Now.AddMinutes(-15),
                EmployeeId = "CTR001",
                Department = "Engineering",
                Title = "DevOps Consultant",
                ManagerSid = "S-1-5-21-123456789-987654321-111111111-1003",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-90),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessApplicationId = 4,
                HumanIdentityId = 5,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ContractorOU"] = "true", ["VendorCode"] = "TECH001" }
            },
            new() {
                Id = 6,
                Name = "Ana Garcia AD Account",
                SamAccountName = "agarcia",
                UserPrincipalName = "agarcia@corp.company.com",
                DistinguishedName = "CN=Ana Garcia,OU=Users,OU=Analytics,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1006",
                GivenName = "Ana",
                Surname = "Garcia",
                DisplayName = "Ana Garcia",
                Email = "ana.garcia@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-90),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = true,
                SmartCardRequired = false,
                LastLogon = BaseDate.AddDays(-30),
                EmployeeId = "EMP005",
                Department = "Analytics",
                Title = "Data Scientist",
                Enabled = false, // On leave
                WhenCreated = BaseDate.AddDays(-300),
                WhenChanged = BaseDate.AddDays(-30),
                BusinessApplicationId = 6,
                HumanIdentityId = 6,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = false,
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["OnLeave"] = "true", ["DisabledReason"] = "Maternity Leave" }
            },
            new() {
                Id = 7,
                Name = "Michael Lee AD Account",
                SamAccountName = "mlee",
                UserPrincipalName = "mlee@corp.company.com",
                DistinguishedName = "CN=Michael Lee,OU=Users,OU=Disabled,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1007",
                GivenName = "Michael",
                Surname = "Lee",
                DisplayName = "Michael Lee (Terminated)",
                Email = "michael.lee@company.com",
                PasswordLastSet = BaseDate.AddDays(-60),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = false,
                LastLogon = BaseDate.AddDays(-30),
                EmployeeId = "EMP006",
                Department = "Business Operations",
                Title = "Business Analyst",
                Enabled = false,
                WhenCreated = BaseDate.AddDays(-500),
                WhenChanged = BaseDate.AddDays(-30),
                BusinessApplicationId = 1,
                HumanIdentityId = 7,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = false,
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Terminated"] = "true", ["DisabledDate"] = "2024-01-30" }
            },
            new() {
                Id = 8,
                Name = "Karen Brown AD Account",
                SamAccountName = "kbrown",
                UserPrincipalName = "kbrown@corp.company.com",
                DistinguishedName = "CN=Karen Brown,OU=Users,OU=HR,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1008",
                GivenName = "Karen",
                Surname = "Brown",
                DisplayName = "Karen Brown",
                Email = "karen.brown@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-25),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = true,
                LastLogon = DateTimeOffset.Now.AddHours(-3),
                EmployeeId = "EMP007",
                Department = "Human Resources",
                Title = "HR Manager",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-600),
                WhenChanged = DateTimeOffset.Now.AddDays(-5),
                BusinessApplicationId = 3,
                HumanIdentityId = 8,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["HRAdmin"] = "true", ["ComplianceOfficer"] = "false" }
            },
            new() {
                Id = 9,
                Name = "David Williams AD Account",
                SamAccountName = "dwilliams",
                UserPrincipalName = "dwilliams@corp.company.com",
                DistinguishedName = "CN=David Williams,OU=Users,OU=Partners,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1009",
                GivenName = "David",
                Surname = "Williams",
                DisplayName = "David Williams (Partner)",
                Email = "david.williams@partner.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-15),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = false,
                AccountExpires = BaseDate.AddDays(305),
                LastLogon = DateTimeOffset.Now.AddMinutes(-90),
                EmployeeId = "PTR001",
                Department = "Engineering",
                Title = "Integration Specialist",
                ManagerSid = "S-1-5-21-123456789-987654321-111111111-1003",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-60),
                WhenChanged = DateTimeOffset.Now.AddHours(-12),
                BusinessApplicationId = 8,
                HumanIdentityId = 9,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["PartnerAccess"] = "true", ["ExternalEmail"] = "true" }
            },
            new() {
                Id = 10,
                Name = "Lisa Miller AD Account",
                SamAccountName = "lmiller",
                UserPrincipalName = "lmiller@corp.company.com",
                DistinguishedName = "CN=Lisa Miller,OU=Users,OU=IT,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1010",
                GivenName = "Lisa",
                Surname = "Miller",
                DisplayName = "Lisa Miller",
                Email = "lisa.miller@company.com",
                PasswordLastSet = DateTimeOffset.Now.AddDays(-35),
                PasswordNeverExpires = false,
                MustChangePasswordAtNextLogon = false,
                SmartCardRequired = true,
                LastLogon = DateTimeOffset.Now.AddMinutes(-10),
                EmployeeId = "EMP008",
                Department = "IT Operations",
                Title = "System Administrator",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-450),
                WhenChanged = DateTimeOffset.Now.AddHours(-4),
                BusinessApplicationId = 9,
                HumanIdentityId = 10,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.HumanActiveDirectoryAccount,
                IsActive = true,
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["AdminLevel"] = "Domain", ["OnCallGroup"] = "primary" }
            }
        };
        }

        public static List<BusinessAppServiceActiveDirectoryAccount> CreateBusinessAppServiceActiveDirectoryAccounts()
        {
            return new List<BusinessAppServiceActiveDirectoryAccount>
        {
            new() {
                Id = 1,
                Name = "ERP Database Service Account",
                SamAccountName = "svc-erp-db",
                UserPrincipalName = "svc-erp-db@corp.company.com",
                DistinguishedName = "CN=svc-erp-db,OU=Service Accounts,OU=Services,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2001",
                ServiceAccountType = "Traditional",
                ServicePrincipalNames = new List<string> { "MSSQL/erp-db01.corp.company.com", "MSSQL/erp-db01" },
                SecretRef = "vault://secrets/svc-erp-db",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-365),
                WhenChanged = DateTimeOffset.Now.AddDays(-30),
                BusinessAppResourceIdentityId = 1,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for ERP database connections",
                CreatedAt = BaseDate,
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["DatabaseRole"] = "db_owner", ["ConnectionPool"] = "enabled" }
            },
            new() {
                Id = 2,
                Name = "CRM API Service Account",
                SamAccountName = "svc-crm-api",
                UserPrincipalName = "svc-crm-api@corp.company.com",
                DistinguishedName = "CN=svc-crm-api,OU=Service Accounts,OU=Services,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2002",
                ServiceAccountType = "Managed",
                ServicePrincipalNames = new List<string> { "HTTP/crm-api.corp.company.com" },
                SecretRef = "vault://secrets/svc-crm-api",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-200),
                WhenChanged = DateTimeOffset.Now.AddDays(-15),
                BusinessAppResourceIdentityId = 2,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for CRM API operations",
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["APIKey"] = "managed", ["OAuth2"] = "enabled" }
            },
            new() {
                Id = 3,
                Name = "HRIS Sync Service Account",
                SamAccountName = "svc-hris-sync",
                UserPrincipalName = "svc-hris-sync@corp.company.com",
                DistinguishedName = "CN=svc-hris-sync,OU=Service Accounts,OU=Services,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2003",
                ServiceAccountType = "GroupManaged",
                ServicePrincipalNames = new List<string> { "HTTP/hris-sync.corp.company.com" },
                SecretRef = "gMSA://corp.company.com/svc-hris-sync",
                PasswordNeverExpires = true,
                ManagedBySid = "S-1-5-21-123456789-987654321-111111111-3001",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-180),
                WhenChanged = DateTimeOffset.Now.AddDays(-7),
                BusinessAppResourceIdentityId = 3,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Group managed service account for HRIS synchronization",
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["gMSA"] = "true", ["HostRestriction"] = "hris-servers" }
            },
            new() {
                Id = 4,
                Name = "Development Platform Service",
                SamAccountName = "svc-devplat",
                UserPrincipalName = "svc-devplat@corp.company.com",
                DistinguishedName = "CN=svc-devplat,OU=Service Accounts,OU=Development,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2004",
                ServiceAccountType = "Traditional",
                ServicePrincipalNames = new List<string> { "HTTP/devplat.corp.company.com", "HTTPS/devplat.corp.company.com" },
                SecretRef = "vault://secrets/svc-devplat",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-120),
                WhenChanged = DateTimeOffset.Now.AddDays(-5),
                BusinessAppResourceIdentityId = 4,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for development platform operations",
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["Docker"] = "enabled", ["Kubernetes"] = "true" }
            },
            new() {
                Id = 5,
                Name = "IAM Connector Service",
                SamAccountName = "svc-iam-conn",
                UserPrincipalName = "svc-iam-conn@corp.company.com",
                DistinguishedName = "CN=svc-iam-conn,OU=Service Accounts,OU=Security,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2005",
                ServiceAccountType = "Managed",
                ServicePrincipalNames = new List<string> { "LDAP/iam-connector.corp.company.com" },
                SecretRef = "vault://secrets/svc-iam-conn",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-90),
                WhenChanged = DateTimeOffset.Now.AddDays(-3),
                BusinessAppResourceIdentityId = 5,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for IAM directory connector",
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "security",
                Attributes = new Dictionary<string, string> { ["Protocol"] = "LDAPS", ["Encryption"] = "AES256" }
            },
            new() {
                Id = 6,
                Name = "BI Reporting Service",
                SamAccountName = "svc-bi-rpt",
                UserPrincipalName = "svc-bi-rpt@corp.company.com",
                DistinguishedName = "CN=svc-bi-rpt,OU=Service Accounts,OU=Analytics,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2006",
                ServiceAccountType = "Traditional",
                ServicePrincipalNames = new List<string> { "HTTP/bi-reports.corp.company.com" },
                SecretRef = "vault://secrets/svc-bi-rpt",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-150),
                WhenChanged = DateTimeOffset.Now.AddDays(-10),
                BusinessAppResourceIdentityId = 6,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for BI report generation",
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "analytics",
                Attributes = new Dictionary<string, string> { ["ReportServer"] = "SSRS", ["DataSource"] = "warehouse" }
            },
            new() {
                Id = 7,
                Name = "Legacy Bridge Service",
                SamAccountName = "svc-legacy",
                UserPrincipalName = "svc-legacy@corp.company.com",
                DistinguishedName = "CN=svc-legacy,OU=Service Accounts,OU=Deprecated,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2007",
                ServiceAccountType = "Traditional",
                ServicePrincipalNames = new List<string> { "HOST/legacy-bridge.corp.company.com" },
                SecretRef = "vault://secrets/svc-legacy",
                PasswordNeverExpires = true,
                Enabled = false,
                WhenCreated = BaseDate.AddDays(-1000),
                WhenChanged = BaseDate.AddDays(-45),
                BusinessAppResourceIdentityId = 7,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = false,
                Description = "Deprecated service account for legacy system bridge",
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "legacy",
                Attributes = new Dictionary<string, string> { ["Deprecated"] = "true", ["RemovalDate"] = "2024-06-01" }
            },
            new() {
                Id = 8,
                Name = "Mobile API Gateway Service",
                SamAccountName = "svc-mobile-gw",
                UserPrincipalName = "svc-mobile-gw@corp.company.com",
                DistinguishedName = "CN=svc-mobile-gw,OU=Service Accounts,OU=Mobile,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2008",
                ServiceAccountType = "Managed",
                ServicePrincipalNames = new List<string> { "HTTP/mobile-api.corp.company.com", "HTTPS/mobile-api.corp.company.com" },
                SecretRef = "vault://secrets/svc-mobile-gw",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-60),
                WhenChanged = DateTimeOffset.Now.AddDays(-2),
                BusinessAppResourceIdentityId = 8,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for mobile API gateway",
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "mobile-team",
                Attributes = new Dictionary<string, string> { ["Gateway"] = "Kong", ["RateLimit"] = "10000/min" }
            },
            new() {
                Id = 9,
                Name = "SharePoint Application Pool",
                SamAccountName = "svc-sp-app",
                UserPrincipalName = "svc-sp-app@corp.company.com",
                DistinguishedName = "CN=svc-sp-app,OU=Service Accounts,OU=SharePoint,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2009",
                ServiceAccountType = "Traditional",
                ServicePrincipalNames = new List<string> { "HTTP/sharepoint.corp.company.com" },
                SecretRef = "vault://secrets/svc-sp-app",
                PasswordNeverExpires = true,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-400),
                WhenChanged = DateTimeOffset.Now.AddDays(-20),
                BusinessAppResourceIdentityId = 9,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = true,
                Description = "Service account for SharePoint application pool",
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "sharepoint",
                Attributes = new Dictionary<string, string> { ["AppPool"] = "SharePointWebApp", ["IIS"] = "enabled" }
            },
            new() {
                Id = 10,
                Name = "Jenkins Agent Service",
                SamAccountName = "svc-jenkins",
                UserPrincipalName = "svc-jenkins@corp.company.com",
                DistinguishedName = "CN=svc-jenkins,OU=Service Accounts,OU=DevOps,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2010",
                ServiceAccountType = "GroupManaged",
                ServicePrincipalNames = new List<string> { "HTTP/jenkins.corp.company.com" },
                SecretRef = "gMSA://corp.company.com/svc-jenkins",
                PasswordNeverExpires = true,
                ManagedBySid = "S-1-5-21-123456789-987654321-111111111-3002",
                Enabled = false, // Under development
                WhenCreated = BaseDate.AddDays(-30),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessAppResourceIdentityId = 10,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ServiceActiveDirectoryAccount,
                IsActive = false,
                Description = "Group managed service account for Jenkins build agents",
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["gMSA"] = "true", ["BuildAgents"] = "5" }
            }
        };
        }

        public static List<BusinessAppActiveDirectoryGroup> CreateBusinessAppActiveDirectoryGroups()
        {
            return new List<BusinessAppActiveDirectoryGroup>
        {
            new() {
                Id = 1,
                Name = "ERP-Users",
                SamAccountName = "ERP-Users",
                DistinguishedName = "CN=ERP-Users,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3001",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Global,
                Mail = "erp-users@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-365),
                WhenChanged = DateTimeOffset.Now.AddDays(-5),
                BusinessAppResourceIdentityId = 1,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for ERP system users",
                CreatedAt = BaseDate,
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "150", ["AccessType"] = "Application" }
            },
            new() {
                Id = 2,
                Name = "CRM-Administrators",
                SamAccountName = "CRM-Administrators",
                DistinguishedName = "CN=CRM-Administrators,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3002",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.DomainLocal,
                Mail = "crm-admins@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-200),
                WhenChanged = DateTimeOffset.Now.AddDays(-2),
                BusinessAppResourceIdentityId = 2,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for CRM system administrators",
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "5", ["PermissionLevel"] = "Admin" }
            },
            new() {
                Id = 3,
                Name = "HRIS-HR-Staff",
                SamAccountName = "HRIS-HR-Staff",
                DistinguishedName = "CN=HRIS-HR-Staff,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3003",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Universal,
                Mail = "hris-hr@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-180),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessAppResourceIdentityId = 3,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for HR staff accessing HRIS",
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "system",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "25", ["DataAccess"] = "Employee" }
            },
            new() {
                Id = 4,
                Name = "DevPlatform-Developers",
                SamAccountName = "DevPlatform-Developers",
                DistinguishedName = "CN=DevPlatform-Developers,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3004",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Global,
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-120),
                WhenChanged = DateTimeOffset.Now.AddDays(-3),
                BusinessAppResourceIdentityId = 4,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for development platform users",
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "30", ["Environment"] = "All" }
            },
            new() {
                Id = 5,
                Name = "IAM-Security-Admins",
                SamAccountName = "IAM-Security-Admins",
                DistinguishedName = "CN=IAM-Security-Admins,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3005",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Universal,
                Mail = "iam-security@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-90),
                WhenChanged = DateTimeOffset.Now.AddHours(-6),
                BusinessAppResourceIdentityId = 5,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for IAM system administrators",
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "security",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "3", ["Privileges"] = "SuperAdmin" }
            },
            new() {
                Id = 6,
                Name = "BI-Analysts",
                SamAccountName = "BI-Analysts",
                DistinguishedName = "CN=BI-Analysts,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3006",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Global,
                Mail = "bi-analysts@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-150),
                WhenChanged = DateTimeOffset.Now.AddDays(-4),
                BusinessAppResourceIdentityId = 6,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for business intelligence analysts",
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "analytics",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "12", ["ReportAccess"] = "Financial" }
            },
            new() {
                Id = 7,
                Name = "Legacy-System-Users",
                SamAccountName = "Legacy-System-Users",
                DistinguishedName = "CN=Legacy-System-Users,OU=Application Groups,OU=Deprecated,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3007",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.DomainLocal,
                Enabled = false,
                WhenCreated = BaseDate.AddDays(-1000),
                WhenChanged = BaseDate.AddDays(-45),
                BusinessAppResourceIdentityId = 7,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = false,
                Description = "Deprecated security group for legacy system users",
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "legacy",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "0", ["Status"] = "Disabled" }
            },
            new() {
                Id = 8,
                Name = "Mobile-Developers",
                SamAccountName = "Mobile-Developers",
                DistinguishedName = "CN=Mobile-Developers,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3008",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Global,
                Mail = "mobile-dev@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-60),
                WhenChanged = DateTimeOffset.Now.AddHours(-12),
                BusinessAppResourceIdentityId = 8,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for mobile application developers",
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "mobile-team",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "8", ["Platform"] = "iOS,Android" }
            },
            new() {
                Id = 9,
                Name = "SharePoint-Contributors",
                SamAccountName = "SharePoint-Contributors",
                DistinguishedName = "CN=SharePoint-Contributors,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3009",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Universal,
                Mail = "sharepoint-contributors@company.com",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-400),
                WhenChanged = DateTimeOffset.Now.AddDays(-6),
                BusinessAppResourceIdentityId = 9,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = true,
                Description = "Security group for SharePoint contributors",
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "sharepoint",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "200", ["Permission"] = "Contribute" }
            },
            new() {
                Id = 10,
                Name = "Jenkins-Build-Users",
                SamAccountName = "Jenkins-Build-Users",
                DistinguishedName = "CN=Jenkins-Build-Users,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-3010",
                GroupType = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupType.Security,
                GroupScope = BusinessAppActiveDirectoryGroup.EActiveDirectoryGroupScope.Global,
                Enabled = false, // Under development
                WhenCreated = BaseDate.AddDays(-30),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessAppResourceIdentityId = 10,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                ResourceType = IResource.EResourceType.ActiveDirectoryGroup,
                IsActive = false,
                Description = "Security group for Jenkins build system users",
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "devops",
                Attributes = new Dictionary<string, string> { ["MemberCount"] = "0", ["Status"] = "Pending" }
            }
        };
        }

        public static List<BusinessAppHumanActiveDirectoryGroupMembership> CreateBusinessAppHumanActiveDirectoryGroupMemberships()
        {
            return new List<BusinessAppHumanActiveDirectoryGroupMembership>
        {
            new() {
                Id = 1,
                Name = "John Smith - ERP Users Membership",
                SamAccountName = "jsmith",
                DistinguishedName = "CN=jsmith,CN=ERP-Users,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1001",
                MemberSince = BaseDate.AddDays(-365),
                GroupId = 1,
                BusinessAppHumanActiveDirectoryAccountId = 1,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-365),
                AddedBy = "system",
                SourceTag = "Initial Provisioning",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-365),
                WhenChanged = DateTimeOffset.Now.AddDays(-5),
                BusinessApplicationId = 1,
                HumanIdentityId = 1,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "ERP Users group membership for John Smith",
                CreatedAt = BaseDate,
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "PowerUser", ["Inherited"] = "false" }
            },
            new() {
                Id = 2,
                Name = "Mary Johnson - CRM Administrators Membership",
                SamAccountName = "mjohnson",
                DistinguishedName = "CN=mjohnson,CN=CRM-Administrators,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1002",
                MemberSince = BaseDate.AddDays(-200),
                GroupId = 2,
                BusinessAppHumanActiveDirectoryAccountId = 2,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-200),
                AddedBy = "admin",
                SourceTag = "Role Assignment",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-200),
                WhenChanged = DateTimeOffset.Now.AddDays(-2),
                BusinessApplicationId = 2,
                HumanIdentityId = 2,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "CRM Administrators group membership for Mary Johnson",
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "Admin", ["ApprovalRequired"] = "true" }
            },
            new() {
                Id = 3,
                Name = "Bob Wilson - HRIS HR Staff Membership",
                SamAccountName = "bwilson",
                DistinguishedName = "CN=bwilson,CN=HRIS-HR-Staff,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1003",
                MemberSince = BaseDate.AddDays(-800),
                GroupId = 3,
                BusinessAppHumanActiveDirectoryAccountId = 3,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-800),
                AddedBy = "hr-admin",
                SourceTag = "Management Role",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-800),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessApplicationId = 3,
                HumanIdentityId = 3,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "HRIS HR Staff group membership for Bob Wilson",
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "Manager", ["AllEmployeeAccess"] = "true" }
            },
            new() {
                Id = 4,
                Name = "Sarah Davis - IAM Security Admins Membership",
                SamAccountName = "sdavis",
                DistinguishedName = "CN=sdavis,CN=IAM-Security-Admins,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1004",
                MemberSince = BaseDate.AddDays(-150),
                GroupId = 5,
                BusinessAppHumanActiveDirectoryAccountId = 4,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-150),
                AddedBy = "security-admin",
                ExpiresAt = BaseDate.AddDays(215),
                SourceTag = "Security Role",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-150),
                WhenChanged = DateTimeOffset.Now.AddHours(-6),
                BusinessApplicationId = 5,
                HumanIdentityId = 4,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "IAM Security Admins group membership for Sarah Davis",
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "SecurityAdmin", ["ReviewDate"] = "2024-06-01" }
            },
            new() {
                Id = 5,
                Name = "Robert Chen - DevPlatform Developers Membership",
                SamAccountName = "rchen",
                DistinguishedName = "CN=rchen,CN=DevPlatform-Developers,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1005",
                MemberSince = BaseDate.AddDays(-90),
                GroupId = 4,
                BusinessAppHumanActiveDirectoryAccountId = 5,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-90),
                AddedBy = "devops-admin",
                ExpiresAt = BaseDate.AddDays(270),
                SourceTag = "Contractor Access",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-90),
                WhenChanged = DateTimeOffset.Now.AddDays(-3),
                BusinessApplicationId = 4,
                HumanIdentityId = 5,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "DevPlatform Developers group membership for Robert Chen",
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "Developer", ["ContractorAccess"] = "limited" }
            },
            new() {
                Id = 6,
                Name = "Ana Garcia - BI Analysts Membership",
                SamAccountName = "agarcia",
                DistinguishedName = "CN=agarcia,CN=BI-Analysts,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1006",
                MemberSince = BaseDate.AddDays(-300),
                GroupId = 6,
                BusinessAppHumanActiveDirectoryAccountId = 6,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-300),
                AddedBy = "analytics-admin",
                SourceTag = "Department Assignment",
                Enabled = false, // Disabled due to leave
                WhenCreated = BaseDate.AddDays(-300),
                WhenChanged = BaseDate.AddDays(-30),
                BusinessApplicationId = 6,
                HumanIdentityId = 6,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = false,
                Description = "BI Analysts group membership for Ana Garcia (disabled - on leave)",
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "Analyst", ["OnLeave"] = "true" }
            },
            new() {
                Id = 7,
                Name = "Michael Lee - ERP Users Membership",
                SamAccountName = "mlee",
                DistinguishedName = "CN=mlee,CN=ERP-Users,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1007",
                MemberSince = BaseDate.AddDays(-500),
                GroupId = 1,
                BusinessAppHumanActiveDirectoryAccountId = 7,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-500),
                AddedBy = "system",
                RemovedAt = BaseDate.AddDays(-30),
                RemovedBy = "hr-admin",
                SourceTag = "Terminated Employee",
                Enabled = false,
                WhenCreated = BaseDate.AddDays(-500),
                WhenChanged = BaseDate.AddDays(-30),
                BusinessApplicationId = 1,
                HumanIdentityId = 7,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = false,
                Description = "Former ERP Users group membership for Michael Lee (terminated)",
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "User", ["TerminationProcessed"] = "true" }
            },
            new() {
                Id = 8,
                Name = "Karen Brown - HRIS HR Staff Membership",
                SamAccountName = "kbrown",
                DistinguishedName = "CN=kbrown,CN=HRIS-HR-Staff,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1008",
                MemberSince = BaseDate.AddDays(-600),
                GroupId = 3,
                BusinessAppHumanActiveDirectoryAccountId = 8,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-600),
                AddedBy = "hr-admin",
                SourceTag = "HR Department",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-600),
                WhenChanged = DateTimeOffset.Now.AddDays(-5),
                BusinessApplicationId = 3,
                HumanIdentityId = 8,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "HRIS HR Staff group membership for Karen Brown",
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "HRManager", ["AllDepartments"] = "true" }
            },
            new() {
                Id = 9,
                Name = "David Williams - Mobile Developers Membership",
                SamAccountName = "dwilliams",
                DistinguishedName = "CN=dwilliams,CN=Mobile-Developers,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1009",
                MemberSince = BaseDate.AddDays(-60),
                GroupId = 8,
                BusinessAppHumanActiveDirectoryAccountId = 9,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-60),
                AddedBy = "mobile-admin",
                ExpiresAt = BaseDate.AddDays(305),
                SourceTag = "Partner Integration",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-60),
                WhenChanged = DateTimeOffset.Now.AddHours(-12),
                BusinessApplicationId = 8,
                HumanIdentityId = 9,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "Mobile Developers group membership for David Williams",
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "Developer", ["PartnerAccess"] = "limited" }
            },
            new() {
                Id = 10,
                Name = "Lisa Miller - SharePoint Contributors Membership",
                SamAccountName = "lmiller",
                DistinguishedName = "CN=lmiller,CN=SharePoint-Contributors,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-1010",
                MemberSince = BaseDate.AddDays(-450),
                GroupId = 9,
                BusinessAppHumanActiveDirectoryAccountId = 10,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-450),
                AddedBy = "sharepoint-admin",
                SourceTag = "IT Operations",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-450),
                WhenChanged = DateTimeOffset.Now.AddDays(-6),
                BusinessApplicationId = 9,
                HumanIdentityId = 10,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "SharePoint Contributors group membership for Lisa Miller",
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["Role"] = "SiteAdmin", ["FullControl"] = "true" }
            }
        };
        }

        public static List<BusinessAppServiceActiveDirectoryGroupMembership> CreateBusinessAppServiceActiveDirectoryGroupMemberships()
        {
            return new List<BusinessAppServiceActiveDirectoryGroupMembership>
        {
            new() {
                Id = 1,
                Name = "ERP Service - ERP Users Membership",
                SamAccountName = "svc-erp-db",
                DistinguishedName = "CN=svc-erp-db,CN=ERP-Users,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2001",
                MemberSince = BaseDate.AddDays(-365),
                GroupId = 1,
                BusinessAppServiceActiveDirectoryAccountId = 1,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-365),
                AddedBy = "system",
                SourceTag = "Service Provisioning",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-365),
                WhenChanged = DateTimeOffset.Now.AddDays(-30),
                BusinessAppResourceIdentityId = 1,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "ERP Users group membership for ERP database service account",
                CreatedAt = BaseDate,
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Database", ["AutoProvisioned"] = "true" }
            },
            new() {
                Id = 2,
                Name = "CRM API - CRM Administrators Membership",
                SamAccountName = "svc-crm-api",
                DistinguishedName = "CN=svc-crm-api,CN=CRM-Administrators,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2002",
                MemberSince = BaseDate.AddDays(-200),
                GroupId = 2,
                BusinessAppServiceActiveDirectoryAccountId = 2,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-200),
                AddedBy = "crm-admin",
                SourceTag = "API Service Setup",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-200),
                WhenChanged = DateTimeOffset.Now.AddDays(-15),
                BusinessAppResourceIdentityId = 2,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "CRM Administrators group membership for CRM API service account",
                CreatedAt = BaseDate.AddDays(1),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "API", ["PermissionLevel"] = "Admin" }
            },
            new() {
                Id = 3,
                Name = "HRIS Sync - HRIS HR Staff Membership",
                SamAccountName = "svc-hris-sync",
                DistinguishedName = "CN=svc-hris-sync,CN=HRIS-HR-Staff,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2003",
                MemberSince = BaseDate.AddDays(-180),
                GroupId = 3,
                BusinessAppServiceActiveDirectoryAccountId = 3,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-180),
                AddedBy = "hris-admin",
                SourceTag = "Sync Service Setup",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-180),
                WhenChanged = DateTimeOffset.Now.AddDays(-7),
                BusinessAppResourceIdentityId = 3,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "HRIS HR Staff group membership for HRIS sync service account",
                CreatedAt = BaseDate.AddDays(2),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Sync", ["gMSA"] = "true" }
            },
            new() {
                Id = 4,
                Name = "DevPlatform Service - DevPlatform Developers Membership",
                SamAccountName = "svc-devplat",
                DistinguishedName = "CN=svc-devplat,CN=DevPlatform-Developers,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2004",
                MemberSince = BaseDate.AddDays(-120),
                GroupId = 4,
                BusinessAppServiceActiveDirectoryAccountId = 4,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-120),
                AddedBy = "devops-admin",
                SourceTag = "Platform Service",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-120),
                WhenChanged = DateTimeOffset.Now.AddDays(-5),
                BusinessAppResourceIdentityId = 4,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "DevPlatform Developers group membership for development platform service",
                CreatedAt = BaseDate.AddDays(3),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Platform", ["Environment"] = "All" }
            },
            new() {
                Id = 5,
                Name = "IAM Connector - IAM Security Admins Membership",
                SamAccountName = "svc-iam-conn",
                DistinguishedName = "CN=svc-iam-conn,CN=IAM-Security-Admins,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2005",
                MemberSince = BaseDate.AddDays(-90),
                GroupId = 5,
                BusinessAppServiceActiveDirectoryAccountId = 5,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-90),
                AddedBy = "security-admin",
                SourceTag = "Directory Connector",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-90),
                WhenChanged = DateTimeOffset.Now.AddDays(-3),
                BusinessAppResourceIdentityId = 5,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "IAM Security Admins group membership for IAM connector service",
                CreatedAt = BaseDate.AddDays(4),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Directory", ["ReadOnly"] = "false" }
            },
            new() {
                Id = 6,
                Name = "BI Reporting - BI Analysts Membership",
                SamAccountName = "svc-bi-rpt",
                DistinguishedName = "CN=svc-bi-rpt,CN=BI-Analysts,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2006",
                MemberSince = BaseDate.AddDays(-150),
                GroupId = 6,
                BusinessAppServiceActiveDirectoryAccountId = 6,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-150),
                AddedBy = "analytics-admin",
                SourceTag = "Report Generation",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-150),
                WhenChanged = DateTimeOffset.Now.AddDays(-10),
                BusinessAppResourceIdentityId = 6,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "BI Analysts group membership for BI reporting service account",
                CreatedAt = BaseDate.AddDays(5),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Reporting", ["ScheduledTask"] = "true" }
            },
            new() {
                Id = 7,
                Name = "Legacy Bridge - Legacy System Users Membership",
                SamAccountName = "svc-legacy",
                DistinguishedName = "CN=svc-legacy,CN=Legacy-System-Users,OU=Application Groups,OU=Deprecated,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2007",
                MemberSince = BaseDate.AddDays(-1000),
                GroupId = 7,
                BusinessAppServiceActiveDirectoryAccountId = 7,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-1000),
                AddedBy = "legacy-admin",
                RemovedAt = BaseDate.AddDays(-45),
                RemovedBy = "migration-admin",
                SourceTag = "Legacy Migration",
                Enabled = false,
                WhenCreated = BaseDate.AddDays(-1000),
                WhenChanged = BaseDate.AddDays(-45),
                BusinessAppResourceIdentityId = 7,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = false,
                Description = "Legacy System Users group membership for legacy bridge service (removed)",
                CreatedAt = BaseDate.AddDays(6),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Bridge", ["Deprecated"] = "true" }
            },
            new() {
                Id = 8,
                Name = "Mobile Gateway - Mobile Developers Membership",
                SamAccountName = "svc-mobile-gw",
                DistinguishedName = "CN=svc-mobile-gw,CN=Mobile-Developers,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2008",
                MemberSince = BaseDate.AddDays(-60),
                GroupId = 8,
                BusinessAppServiceActiveDirectoryAccountId = 8,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-60),
                AddedBy = "mobile-admin",
                SourceTag = "API Gateway Setup",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-60),
                WhenChanged = DateTimeOffset.Now.AddDays(-2),
                BusinessAppResourceIdentityId = 8,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "Mobile Developers group membership for mobile gateway service",
                CreatedAt = BaseDate.AddDays(7),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Gateway", ["LoadBalanced"] = "true" }
            },
            new() {
                Id = 9,
                Name = "SharePoint App Pool - SharePoint Contributors Membership",
                SamAccountName = "svc-sp-app",
                DistinguishedName = "CN=svc-sp-app,CN=SharePoint-Contributors,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2009",
                MemberSince = BaseDate.AddDays(-400),
                GroupId = 9,
                BusinessAppServiceActiveDirectoryAccountId = 9,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-400),
                AddedBy = "sharepoint-admin",
                SourceTag = "Application Pool",
                Enabled = true,
                WhenCreated = BaseDate.AddDays(-400),
                WhenChanged = DateTimeOffset.Now.AddDays(-20),
                BusinessAppResourceIdentityId = 9,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = true,
                Description = "SharePoint Contributors group membership for SharePoint app pool service",
                CreatedAt = BaseDate.AddDays(8),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "AppPool", ["IISRole"] = "Worker" }
            },
            new() {
                Id = 10,
                Name = "Jenkins Agent - Jenkins Build Users Membership",
                SamAccountName = "svc-jenkins",
                DistinguishedName = "CN=svc-jenkins,CN=Jenkins-Build-Users,OU=Application Groups,OU=Groups,DC=corp,DC=company,DC=com",
                Sid = "S-1-5-21-123456789-987654321-111111111-2010",
                MemberSince = BaseDate.AddDays(-30),
                GroupId = 10,
                BusinessAppServiceActiveDirectoryAccountId = 10,
                IsDirect = true,
                AddedAt = BaseDate.AddDays(-30),
                AddedBy = "devops-admin",
                SourceTag = "Build System Setup",
                Enabled = false, // Under development
                WhenCreated = BaseDate.AddDays(-30),
                WhenChanged = DateTimeOffset.Now.AddDays(-1),
                BusinessAppResourceIdentityId = 10,
                DomainId = 1,
                AuthoritativeSourceId = 1,
                IsActive = false,
                Description = "Jenkins Build Users group membership for Jenkins agent service (pending)",
                CreatedAt = BaseDate.AddDays(9),
                CreatedBy = "AD-Sync",
                Attributes = new Dictionary<string, string> { ["ServiceType"] = "Build", ["Status"] = "Pending" }
            }
        };
        }

        public static List<BusinessAppActiveDirectoryDirectoryDomain> SeedDirectoryDomains()
        {
            var baseDate = DateTimeOffset.UtcNow.AddDays(-30);

            return new List<BusinessAppActiveDirectoryDirectoryDomain>
            {
                // Corporate Production Domain
                new BusinessAppActiveDirectoryDirectoryDomain
                {
                    Id = 1,
                    DnsName = "corp.cyborg.com",
                    NetBiosName = "CORP",
                    DomainSid = "S-1-5-21-1234567890-987654321-1122334455",
                    DistinguishedName = "DC=corp,DC=cyborg,DC=com",
                    ForestId = 1,
                    Name = "Corporate Production Domain",
                    Description = "Primary corporate domain for production workloads and user accounts",
                    IsActive = true,
                    ResourceType = IResource.EResourceType.ActiveDirectoryInstance,
                    Attributes = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
                    {
                        { "DomainMode", "2016" },
                        { "DomainControllerCount", "4" },
                        { "UserCount", "2850" },
                        { "ComputerCount", "1200" },
                        { "Location", "Primary Datacenter" },
                        { "BackupSchedule", "Daily" }
                    },
                    CreatedAt = baseDate,
                    CreatedBy = "system@cyborg.com",
                    UpdatedAt = baseDate.AddDays(5),
                    UpdatedBy = "admin@cyborg.com",
                    IsDeleted = false,
                    AuthoritativeSourceId = 1,
                    BusinessAppResourceIdentityId = 101
                },

                // Development Domain
                new BusinessAppActiveDirectoryDirectoryDomain
                {
                    Id = 2,
                    DnsName = "dev.cyborg.com",
                    NetBiosName = "DEV",
                    DomainSid = "S-1-5-21-1234567890-987654321-2233445566",
                    DistinguishedName = "DC=dev,DC=cyborg,DC=com",
                    ForestId = 2,
                    Name = "Development Environment Domain",
                    Description = "Isolated domain for development and testing activities",
                    IsActive = true,
                    ResourceType = IResource.EResourceType.ActiveDirectoryInstance,
                    Attributes = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
                    {
                        { "DomainMode", "2019" },
                        { "DomainControllerCount", "2" },
                        { "UserCount", "150" },
                        { "ComputerCount", "75" },
                        { "Location", "Cloud Environment" },
                        { "BackupSchedule", "Weekly" }
                    },
                    CreatedAt = baseDate.AddDays(-10),
                    CreatedBy = "devops@cyborg.com",
                    UpdatedAt = baseDate.AddDays(-2),
                    UpdatedBy = "devops@cyborg.com",
                    IsDeleted = false,
                    AuthoritativeSourceId = 2,
                    BusinessAppResourceIdentityId = 102
                },

                // Regional Europe Domain
                new BusinessAppActiveDirectoryDirectoryDomain
                {
                    Id = 3,
                    DnsName = "europe.cyborg.com",
                    NetBiosName = "EUROPE",
                    DomainSid = "S-1-5-21-1234567890-987654321-3344556677",
                    DistinguishedName = "DC=europe,DC=cyborg,DC=com",
                    ForestId = 1,
                    Name = "European Regional Domain",
                    Description = "Regional domain for European operations and compliance requirements",
                    IsActive = true,
                    ResourceType = IResource.EResourceType.ActiveDirectoryInstance,
                    Attributes = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
                    {
                        { "DomainMode", "2016" },
                        { "DomainControllerCount", "3" },
                        { "UserCount", "980" },
                        { "ComputerCount", "450" },
                        { "Location", "Frankfurt Datacenter" },
                        { "BackupSchedule", "Daily" },
                        { "ComplianceRegion", "GDPR" },
                        { "TimeZone", "CET" }
                    },
                    CreatedAt = baseDate.AddDays(-45),
                    CreatedBy = "admin.eu@cyborg.com",
                    UpdatedAt = baseDate.AddDays(-1),
                    UpdatedBy = "admin.eu@cyborg.com",
                    IsDeleted = false,
                    AuthoritativeSourceId = 1,
                    BusinessAppResourceIdentityId = 103
                },

                // Legacy Domain (Being Decommissioned)
                new BusinessAppActiveDirectoryDirectoryDomain
                {
                    Id = 4,
                    DnsName = "legacy.cyborg.local",
                    NetBiosName = "LEGACY",
                    DomainSid = "S-1-5-21-1234567890-987654321-4455667788",
                    DistinguishedName = "DC=legacy,DC=cyborg,DC=local",
                    ForestId = 3,
                    Name = "Legacy Domain",
                    Description = "Legacy domain scheduled for decommissioning - migration in progress",
                    IsActive = false,
                    ResourceType = IResource.EResourceType.ActiveDirectoryInstance,
                    Attributes = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
                    {
                        { "DomainMode", "2012R2" },
                        { "DomainControllerCount", "2" },
                        { "UserCount", "125" },
                        { "ComputerCount", "50" },
                        { "Location", "On-Premises Legacy" },
                        { "BackupSchedule", "Weekly" },
                        { "MigrationStatus", "In Progress" },
                        { "DecommissionDate", "2025-12-31" }
                    },
                    CreatedAt = baseDate.AddDays(-365),
                    CreatedBy = "legacy-admin@cyborg.com",
                    UpdatedAt = baseDate.AddDays(-7),
                    UpdatedBy = "migration-team@cyborg.com",
                    IsDeleted = false,
                    AuthoritativeSourceId = 3,
                    BusinessAppResourceIdentityId = 104
                },

                // Partner Domain
                new BusinessAppActiveDirectoryDirectoryDomain
                {
                    Id = 5,
                    DnsName = "partners.fabrikam.com",
                    NetBiosName = "PARTNERS",
                    DomainSid = "S-1-5-21-1234567890-987654321-5566778899",
                    DistinguishedName = "DC=partners,DC=fabrikam,DC=com",
                    ForestId = 4,
                    Name = "Partner Collaboration Domain",
                    Description = "Federated domain for external partner collaboration and B2B integration",
                    IsActive = true,
                    ResourceType = IResource.EResourceType.ActiveDirectoryInstance,
                    Attributes = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
                    {
                        { "DomainMode", "2019" },
                        { "DomainControllerCount", "2" },
                        { "UserCount", "320" },
                        { "ComputerCount", "180" },
                        { "Location", "DMZ Network" },
                        { "BackupSchedule", "Daily" },
                        { "TrustType", "External Trust" },
                        { "PartnerOrganization", "Fabrikam Industries" },
                        { "AccessLevel", "Limited" }
                    },
                    CreatedAt = baseDate.AddDays(-90),
                    CreatedBy = "partnership@cyborg.com",
                    UpdatedAt = baseDate.AddDays(-3),
                    UpdatedBy = "security@cyborg.com",
                    IsDeleted = false,
                    AuthoritativeSourceId = 4,
                    BusinessAppResourceIdentityId = 105
                }
            };
        }
    }
}
